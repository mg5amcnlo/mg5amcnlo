ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c      written by the UFO converter
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      SUBROUTINE COUP2( VECID)

      IMPLICIT NONE
      INTEGER VECID
      INCLUDE 'model_functions.inc'

      DOUBLE PRECISION PI, ZERO
      PARAMETER  (PI=3.141592653589793D0)
      PARAMETER  (ZERO=0D0)
      INCLUDE 'input.inc'
      INCLUDE 'coupl.inc'
      GC_4(VECID) = -G
      GC_5(VECID) = MDL_COMPLEXI*G
      GC_6(VECID) = MDL_COMPLEXI*MDL_G__EXP__2
      R2_3GQ(VECID) = 2.000000D+00*MDL_G__EXP__3/(4.800000D+01*PI**2)
      R2_3GG(VECID) = MDL_NCOL*MDL_G__EXP__3/(4.800000D+01*PI**2)
     $ *(7.000000D+00/4.000000D+00+MDL_LHV)
      R2_GQQ(VECID) = -MDL_COMPLEXI*MDL_G__EXP__3/(1.600000D+01*PI**2)
     $ *((MDL_NCOL__EXP__2-1.000000D+00)/(2.000000D+00*MDL_NCOL))
     $ *(1.000000D+00+MDL_LHV)
      R2_GGQ(VECID) = (2.000000D+00)*MDL_COMPLEXI*MDL_G__EXP__2
     $ /(4.800000D+01*PI**2)
      R2_GGB(VECID) = (2.000000D+00)*MDL_COMPLEXI*MDL_G__EXP__2*(
     $ -6.000000D+00*MDL_MB__EXP__2)/(4.800000D+01*PI**2)
      R2_GGT(VECID) = (2.000000D+00)*MDL_COMPLEXI*MDL_G__EXP__2*(
     $ -6.000000D+00*MDL_MT__EXP__2)/(4.800000D+01*PI**2)
      R2_GGG_1(VECID) = (2.000000D+00)*MDL_COMPLEXI*MDL_G__EXP__2
     $ *MDL_NCOL/(4.800000D+01*PI**2)*(1.000000D+00/2.000000D+00
     $ +MDL_LHV)
      R2_GGG_2(VECID) = -(2.000000D+00)*MDL_COMPLEXI*MDL_G__EXP__2
     $ *MDL_NCOL/(4.800000D+01*PI**2)*MDL_LHV
      R2_QQQ(VECID) = MDL_LHV*MDL_COMPLEXI*MDL_G__EXP__2
     $ *(MDL_NCOL__EXP__2-1.000000D+00)/(3.200000D+01*PI**2*MDL_NCOL)
      R2_QQB(VECID) = MDL_LHV*MDL_COMPLEXI*MDL_G__EXP__2
     $ *(MDL_NCOL__EXP__2-1.000000D+00)*(2.000000D+00*MDL_MB)
     $ /(3.200000D+01*PI**2*MDL_NCOL)
      R2_QQT(VECID) = MDL_LHV*MDL_COMPLEXI*MDL_G__EXP__2
     $ *(MDL_NCOL__EXP__2-1.000000D+00)*(2.000000D+00*MDL_MT)
     $ /(3.200000D+01*PI**2*MDL_NCOL)
      UV_3GG_1EPS(VECID) = -MDL_G_UVG_1EPS_*G
      UV_3GB_1EPS(VECID) = -MDL_G_UVB_1EPS_*G
      UV_GQQG_1EPS(VECID) = MDL_COMPLEXI*MDL_G_UVG_1EPS_*G
      UV_GQQB_1EPS(VECID) = MDL_COMPLEXI*MDL_G_UVB_1EPS_*G
      UV_BMASS_1EPS(VECID) = MDL_BMASS_UV_1EPS_
      UV_TMASS_1EPS(VECID) = MDL_TMASS_UV_1EPS_
      UVWFCT_B_0_1EPS(VECID) = COND(DCMPLX(MDL_MB),DCMPLX(0.000000D+00)
     $ ,DCMPLX(-((MDL_G__EXP__2)/(2.000000D+00*1.600000D+01*PI**2))
     $ *3.000000D+00*MDL_CF))
      UVWFCT_G_1_1EPS(VECID) = COND(DCMPLX(MDL_MB),DCMPLX(0.000000D+00)
     $ ,DCMPLX(-((MDL_G__EXP__2)/(2.000000D+00*4.800000D+01*PI**2))
     $ *4.000000D+00*MDL_TF))
      R2_BXTW(VECID) = ((MDL_CKM33*MDL_EE*MDL_COMPLEXI)/(MDL_SW
     $ *MDL_SQRT__2))*MDL_R2MIXEDFACTOR_FIN_
      UV_3GB(VECID) = -MDL_G_UVB_FIN_*G
      UV_3GT(VECID) = -MDL_G_UVT_FIN_*G
      UV_GQQB(VECID) = MDL_COMPLEXI*MDL_G_UVB_FIN_*G
      UV_GQQT(VECID) = MDL_COMPLEXI*MDL_G_UVT_FIN_*G
      UV_BMASS(VECID) = MDL_BMASS_UV_FIN_
      UV_TMASS(VECID) = MDL_TMASS_UV_FIN_
      UVWFCT_B_0(VECID) = COND(DCMPLX(MDL_MB),DCMPLX(0.000000D+00)
     $ ,DCMPLX(-((MDL_G__EXP__2)/(2.000000D+00*1.600000D+01*PI**2))
     $ *MDL_CF*(4.000000D+00-3.000000D+00*REGLOG(DCMPLX(MDL_MB__EXP__2
     $ /MDL_MU_R__EXP__2)))))
      UVWFCT_T_0(VECID) = COND(DCMPLX(MDL_MT),DCMPLX(0.000000D+00)
     $ ,DCMPLX(-((MDL_G__EXP__2)/(2.000000D+00*1.600000D+01*PI**2))
     $ *MDL_CF*(4.000000D+00-3.000000D+00*REGLOG(DCMPLX(MDL_MT__EXP__2
     $ /MDL_MU_R__EXP__2)))))
      UVWFCT_G_1(VECID) = COND(DCMPLX(MDL_MB),DCMPLX(0.000000D+00)
     $ ,DCMPLX(((MDL_G__EXP__2)/(2.000000D+00*4.800000D+01*PI**2))
     $ *4.000000D+00*MDL_TF*REGLOG(DCMPLX(MDL_MB__EXP__2
     $ /MDL_MU_R__EXP__2))))
      UVWFCT_G_2(VECID) = COND(DCMPLX(MDL_MT),DCMPLX(0.000000D+00)
     $ ,DCMPLX(((MDL_G__EXP__2)/(2.000000D+00*4.800000D+01*PI**2))
     $ *4.000000D+00*MDL_TF*REGLOG(DCMPLX(MDL_MT__EXP__2
     $ /MDL_MU_R__EXP__2))))
      END
